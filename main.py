import turtle
turtle.pendown()
turtle.left(90)


def square(x, y, length, line_color, filling_color):
    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.color(line_color, filling_color)
    turtle.begin_fill()
    turtle.forward(length)
    turtle.right(90)
    turtle.forward(length)
    turtle.right(90)
    turtle.forward(length)
    turtle.right(90)
    turtle.forward(length)
    turtle.right(90)
    turtle.end_fill()

def leg_triangle(x, y, leg_length, line_color, filling_color):
    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.color(line_color, filling_color)
    turtle.begin_fill()
    turtle.forward((2*leg_length**2)**0.5)
    turtle.right(135)
    turtle.forward(leg_length)
    turtle.right(90)
    turtle.forward(leg_length)
    turtle.right(135)
    turtle.end_fill()

def hypotenuse_triangle(x, y, hypotenuse_length, line_color, filling_color):
    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.color(line_color, filling_color)
    turtle.begin_fill()
    turtle.forward(hypotenuse_length)
    turtle.right(135)
    turtle.forward((0.5*hypotenuse_length**2)**0.5)
    turtle.right(90)
    turtle.forward((0.5*hypotenuse_length**2)**0.5)
    turtle.right(135)
    turtle.end_fill()

def parallelogram(x, y, length, height,  line_color, filling_color):
    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.color(line_color, filling_color)
    turtle.begin_fill()
    turtle.right(45)
    turtle.forward(height/((2**0.5)/2))
    turtle.right(45)
    turtle.forward(length)
    turtle.right(135)
    turtle.forward(height / ((2 ** 0.5) / 2))
    turtle.right(45)
    turtle.forward(length)
    turtle.right(45)
    turtle.end_fill()

def rectangle(x, y, length, height, line_color, filling_color):
    turtle.up()
    turtle.setposition(x, y)
    turtle.down()
    turtle.color(line_color, filling_color)
    turtle.begin_fill()
    turtle.forward(height)
    turtle.right(90)
    turtle.forward(length)
    turtle.right(90)
    turtle.forward(height)
    turtle.right(90)
    turtle.forward(length)
    turtle.right(90)
    turtle.end_fill()


def main_square(x, y, length):
    hypotenuse_triangle(x-0.5*length, y-0.5*length, length, 'white', 'red')
    turtle.right(90)
    hypotenuse_triangle(x-0.5*length, y+0.5*length, length, 'white', 'orange')
    turtle.right(90)
    hypotenuse_triangle(x+0.5*length, y+0.5*length, 0.5*length, 'white', 'yellow')
    turtle.right(225)
    leg_triangle(x, y-0.5*length, 0.5*length, 'white', 'green')
    square(x, y, (0.5*(0.5*length)**2)**0.5, 'white', 'cyan')
    turtle.left(135)
    hypotenuse_triangle(x+0.25*length, y-0.25*length, 0.5*length, 'white', 'blue')
    turtle.right(90)
    parallelogram(x-0.5*length, y-0.5*length, 0.5*length, 0.25*length, 'white', 'purple')
    turtle.right(45)
#main_square(0, 0, 200)


def f1_car(x, y, length):
    turtle.right(45)
    leg_triangle(x, y, 0.24*length, 'red', 'black')
    turtle.left(45)
    square(x+0.24*length,y-0.16*length, 0.16*length, 'black', 'black')
    turtle.right(45)
    leg_triangle(x+0.24*length, y, 0.16*length, 'red', 'red')
    turtle.left(45)
    rectangle(x+0.4*length, y-0.08*length, 0.32*length, 0.08*length, 'red', 'red')
    square(x+0.72*length, y-0.16*length, 0.16*length, 'black', 'black')
    turtle.right(135)
    leg_triangle(x+0.88*length, y+0.04*length, 0.12*length, 'black', 'red')
    leg_triangle(x+0.4*length, y+0.16*length, 0.16*length, 'red', 'red')
    turtle.right(180)
    leg_triangle(x+0.56*length, y, 0.16*length, 'red', 'black')
    turtle.right(45)
    rectangle(x+0.56*length, y, 0.32*length, 0.04*length, 'red', 'red')

#f1_car(135, -200, 195)


def rabbit(x, y, length):
    square(x, y, 1/3*length, 'white', 'red')
    turtle.right(45)
    leg_triangle(x-2/3*length, y-0.5*length, 2/3*length, 'white', 'orange')
    turtle.right(180)
    leg_triangle(x, y-0.5*length, 2/3*length, 'white', 'yellow')
    turtle.right(135)
    hypotenuse_triangle(x, y-2/3*length, 1/3*length, 'white', 'green')
    turtle.right(45)
    leg_triangle(x-2/3*length, y-7/6*length, 0.5*length, 'white', 'cyan')
    turtle.right(90)
    leg_triangle(x-1/6*length, y-5/6*length, 1/3*length, 'white', 'blue')
    turtle.right(90)
    parallelogram(x+1/6*length, y+1/3*length, 0.5*length, 1/6*length, 'white', 'purple')

#rabbit(-175, 200, 95)

def rooster(x, y, length):
    square(x, y, 1/4*length, 'white', 'orange')
    turtle.left(90)
    hypotenuse_triangle(x + 1/4*1.5*length, y+1/4*length, 1/4*1.5*length,'white', 'blue')
    turtle.left(45)
    leg_triangle(x+ 1/4* length, y, 1/2*length, 'white', 'yellow')
    turtle.left(45)
    hypotenuse_triangle(x + 1/8*length, y - (1/2-(1.5*1/4))*length, 1.5*1/4*length, 'white', 'BlueViolet')
    turtle.right(135)
    leg_triangle(x- 1/4*length, y- 1/4*length, 1/2*length, 'white', 'magenta')
    turtle.left(45)
    hypotenuse_triangle(x- 1/4*length, y+ 1/4*length, 1/2*length, 'white', 'cyan')
    turtle.left(180)
    parallelogram(x- 3/4*length, y +1/4*length, 1/3*length, 1/8*length, 'white', 'LimeGreen')


#rooster(225, 200, 150)

def helicopter(x, y, length):
    parallelogram(x+1/5*length, y+ 1/4*length, 1/2.5*length, 1/6*length, 'white', 'LimeGreen')
    turtle.left(135)
    turtle.right(180)
    hypotenuse_triangle(x+ 1/5*length, y- 1/2*length, 3/4*length, 'white', 'red')
    turtle.right(180)
    hypotenuse_triangle(x+1/5*length, y+1/4*length, 3/4*length,'white', 'yellow')
    turtle.right(90)
    hypotenuse_triangle(x+1/5*length, y+1/4*length, 1/2*length, 'white', 'blue')
    turtle.left(45)
    turtle.right(45)
    leg_triangle(x,y-1/3.25*length, 1/4*length, 'white', 'purple')
    turtle.right(180)
    leg_triangle(x-1/1.875*length,y-1/8.5*length, 1/4*length, 'white', 'pink')
    turtle.left(135)
    square(x-1/1.5*length, y-1/4*length, 1/4*length, 'white', 'orange')

helicopter(0, -175, 150)

turtle.done()

